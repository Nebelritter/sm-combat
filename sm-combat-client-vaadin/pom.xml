<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>de.cbf.sm</groupId>
    <artifactId>sm-combat</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>sm-combat-client-vaadin</artifactId>
  <name>SM combat client vaadin</name>
  <packaging>war</packaging>

  <prerequisites>
    <maven>3</maven>
  </prerequisites>

  <properties>
    <vaadin.version>7.7.3</vaadin.version>
    <vaadin.plugin.version>7.7.3</vaadin.plugin.version>
    <vaadin.cdi.version>1.0.3</vaadin.cdi.version>
    <jetty.plugin.version>9.3.9.v20160517</jetty.plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- If there are no local customizations, this can also be "fetch" or 
      "cdn" -->
    <vaadin.widgetset.mode>local</vaadin.widgetset.mode>

    <!-- vaadin addons -->
    <vaadin.addon.confirmdialog.version>2.1.3</vaadin.addon.confirmdialog.version>
  </properties>

  <repositories>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-bom</artifactId>
        <version>${vaadin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>



  <dependencies>

    <!-- Dependency on the EJB module so we can use it's services if needed -->
    <dependency>
      <groupId>de.cbf.sm</groupId>
      <artifactId>sm-combat-core</artifactId>
      <scope>provided</scope>
      <type>ejb</type>
    </dependency>

    <!-- Import the JAX-RS API, we use provided scope as the API is included 
      in JBoss WildFly -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Import the CDI API, we use provided scope as the API is included 
      in JBoss WildFly -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>


    <!-- Import the JSF API, we use provided scope as the API is included 
      in JBoss WildFly -->
    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- vaadin dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-push</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
    </dependency>
    <!-- Import for vaadin using cdi -->
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-cdi</artifactId>
      <version>${vaadin.cdi.version}</version>
    </dependency>
    <!-- vaadin addons  -->
    <dependency>
      <groupId>org.vaadin.addon</groupId>
      <artifactId>confirmdialog</artifactId>
      <version>${vaadin.addon.confirmdialog.version}</version>
    </dependency>  
   
  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${version.war.plugin}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <!-- Exclude an unnecessary file generated by the GWT compiler. 
            <packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes> -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadin.plugin.version}</version>
        <configuration>
          <extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
          <webappDirectory>${basedir}/target/classes/VAADIN/widgetsets</webappDirectory>
          <draftCompile>false</draftCompile>
          <compileReport>false</compileReport>
          <style>OBF</style>
          <strict>true</strict>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>update-theme</goal>
              <goal>update-widgetset</goal>
              <goal>compile</goal>
              <!-- Comment out compile-theme goal to use on-the-fly theme 
                compilation -->
              <goal>compile-theme</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <!-- Clean up also any pre-compiled themes -->
        <configuration>
          <filesets>
            <fileset>
              <directory>src/main/webapp/VAADIN/themes</directory>
              <includes>
                <include>**/styles.css</include>
                <include>**/styles.scss.cache</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

      <!-- The Jetty plugin allows us to easily test the development build 
        by running jetty:run on the command line. -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.plugin.version}</version>
        <configuration>
          <scanIntervalSeconds>2</scanIntervalSeconds>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- Vaadin pre-release repositories -->
      <id>vaadin-prerelease</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <repositories>
        <repository>
          <id>vaadin-prereleases</id>
          <url>http://maven.vaadin.com/vaadin-prereleases</url>
        </repository>
        <repository>
          <id>vaadin-snapshots</id>
          <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>vaadin-prereleases</id>
          <url>http://maven.vaadin.com/vaadin-prereleases</url>
        </pluginRepository>
        <pluginRepository>
          <id>vaadin-snapshots</id>
          <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>

</project>
